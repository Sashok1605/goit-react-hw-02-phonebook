{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","id","v4","findByName","contactName","props","contacts","some","handleSubmit","preventDefault","alert","onSubmit","reset","this","className","s","form","formLabel","formInput","type","pattern","title","required","onChange","buttonSubmit","Component","ContactListItem","onDeletContact","contactListItem","contact","buttonDelete","onClick","ContactList","contactList","map","Filter","filterLabel","filterInput","App","filter","deleteContact","contactId","prevState","formSubmitHandler","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a64fabc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1-wWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3737b\",\"formLabel\":\"ContactForm_formLabel__3qocJ\",\"formInput\":\"ContactForm_formInput__2b17D\",\"buttonSubmit\":\"ContactForm_buttonSubmit__1D_lr\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ id: v4(), [name]: value });\r\n  };\r\n\r\n  findByName = contactName => {\r\n    return this.props.contacts.some(({ name }) => name === contactName);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    if (this.findByName(name)) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.formLabel}>\r\n          Name\r\n          <input\r\n            className={s.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.formLabel}>\r\n          Number\r\n          <input\r\n            className={s.formInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.buttonSubmit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDeletContact }) => (\r\n  <li className={s.contactListItem}>\r\n    <p className={s.contact}>\r\n      {' '}\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      className={s.buttonDelete}\r\n      type=\"button\"\r\n      onClick={() => onDeletContact(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeletContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeletContact }) => (\r\n  <ul className={s.contactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDeletContact={onDeletContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeletContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  formSubmitHandler = ({ id, name, number }) => {\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, { id, name, number }],\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm contacts={contacts} onSubmit={this.formSubmitHandler} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onChange={this.changeFilter}\r\n          onDeletContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__LWT0G\",\"contact\":\"ContactListItem_contact__30p3v\",\"buttonDelete\":\"ContactListItem_buttonDelete__3iUz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1a86f\",\"filterInput\":\"Filter_filterInput__1IW9v\"};"],"sourceRoot":""}